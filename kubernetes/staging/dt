#!/bin/bash

unamestr=$(uname)
if [ "$unamestr" = 'Linux' ]; then
  export $(grep -v '^#' .env | xargs -d '\n')
elif [ "$unamestr" = 'FreeBSD' ] || [ "$unamestr" = 'Darwin' ]; then
  export $(grep -v '^#' .env | xargs -0)
fi

decrypt() {
    for SECRET_FILE in `ls -1 secrets*.yaml`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/certificates/*.pem`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/realm/*.json`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
}

encrypt() {
    for SECRET_FILE in `ls -1 secrets*.yaml`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --encrypted-regex '^(data|stringData)$' --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/certificates/*.pem`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/realm/*.json`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --in-place ${SECRET_FILE}
    done
}

while [[ $# -gt 0 ]]; do
    case ${1} in
        -f|--file)
            FILE="$2"
            shift
            ;;
        -h|--help)
            COMMAND="help"
            ;;
        up)
            COMMAND="up"
            ;;
        down)
            COMMAND="down"
            ;;
        status)
            COMMAND="status"
            ;;
        encrypt)
            COMMAND="encrypt"
            ;;
        decrypt)
            COMMAND="decrypt"
            ;;
        replace)
            COMMAND="replace"
            ;;
        *)
            echo "dt: illegal option"
            break
            ;;
    esac
    shift
done

# Default COMMAND to help if empty
COMMAND=${COMMAND:-help}

if [[ ${COMMAND} == "replace" ]] && [[ -z ${FILE} ]]; then
    echo "dt: replace command missing filename"
    COMMAND="help";
fi

case ${COMMAND} in
    up)
        decrypt
        kubectl kustomize . | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl apply --filename -
        ;;
    down)
        decrypt
        kubectl kustomize . | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl delete --filename -
        ;;
    status)
        ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl get po,svc,configMap -n terarium
        ;;
    replace)
        cat $FILE | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl delete -f -
        cat $FILE | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl apply -f -
        ;;
    decrypt)
        decrypt
        ;;
    encrypt)
        encrypt
        ;;
    help)
        echo "
NAME
    dt - deploy TERArium

SYNOPSIS
    dt [up | down | replace --file <yaml> | status | decrypt | encrypt]

DESCRIPTION
  Launch commands:
    up                Launches the entire TERArium stack
    down              Tears down the entire TERArium stack
    replace           Replaces a deployed yaml file with the latest

  Other commands:
    status            Displays the status of the TERArium cluster
    encrypt           Encrypt secrets for adding to git repo
    decrypt           Decrypt secrets for editing

  Options: 
    -f|--file <yaml>  the file to be replaced

  Environment Variables will be read from a '.env' file, the following can be set
    AGE_PUBLIC_KEY    the 'askem.agekey' file's public key
    SOPS_AGE_KEY_FILE location of the file 'askem.agekey'
        "
        ;;
esac
