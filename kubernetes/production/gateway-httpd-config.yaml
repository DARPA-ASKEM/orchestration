---
apiVersion: v1
kind: ConfigMap
metadata:
  name: gateway-httpd-config
  namespace: terarium
data:
  000-default.conf: |
    ServerName ${SERVICE_FQDN}

    <VirtualHost *:${LISTEN_PORT}>
        DocumentRoot "/usr/local/apache2/htdocs"
        ServerName ${SERVICE_FQDN}
        ServerAdmin you@example.com

        ErrorLog /proc/self/fd/1
        CustomLog /proc/self/fd/2 combined
        LogLevel debug

        Header set OIDC_access_token "%{OIDC_access_token}e" env=OIDC_access_token
        Header set OIDC_access_token_expires "%{OIDC_access_token_expires}e" env=OIDC_access_token_expires

        RequestHeader set X-Forwarded-Proto "${SERVICE_PROTOCOL}" early
        RequestHeader set X-Forwarded-Port ${SERVICE_PORT}

        ProxyPreserveHost On

        OIDCProviderMetadataURL ${KEYCLOAK_SERVICE_URL}/realms/Uncharted/.well-known/openid-configuration
        OIDCSSLValidateServer off
        OIDCRedirectURI ${SERVICE_PROTOCOL}://${SERVICE_FQDN}:${SERVICE_PORT}${SERVICE_REDIRECT_URL_PATH}
        OIDCDefaultURL ${SERVICE_PROTOCOL}://${SERVICE_FQDN}:${SERVICE_PORT}${OIDC_DEFAULT_URL_PATH}
        OIDCCryptoPassphrase ${OIDC_CRYPTO_PASS_PHRASE}
        OIDCClientID ${OIDC_CLIENT_ID}
        OIDCClientSecret ${OIDC_CLIENT_SECRET}
        OIDCScope "openid email profile"
        OIDCXForwardedHeaders X-Forwarded-Host X-Forwarded-Port X-Forwarded-Proto
        OIDCPassClaimsAs headers
        OIDCSessionInactivityTimeout 400

        OIDCRemoteUserClaim sub
        OIDCPassClaimsAs environment

        OIDCInfoHook userinfo

        # See fast if we accumulate state cookies
        LimitRequestFieldSize 4096

        Header setifempty Cache-Control "max-age=0, must-revalidate"

        RedirectTemp /logout ${SERVICE_PROTOCOL}://${SERVICE_FQDN}:${SERVICE_PORT}${SERVICE_REDIRECT_URL_PATH}?logout=${SERVICE_PROTOCOL}://${SERVICE_FQDN}:${SERVICE_PORT}/app/

        SSLProxyEngine on
        SSLProxyVerify none
        SSLProxyCheckPeerCN off
        SSLProxyCheckPeerName off
        SSLProxyCheckPeerExpire off

        # Keycloak proxy
        <Location /auth/>
            ProxyPass ${KEYCLOAK_SERVICE_URL}/
            ProxyPassReverse ${KEYCLOAK_SERVICE_URL}/
        </Location>
        # Bearer token check
        <Location /silent-check-sso.html>
            AuthType openid-connect
            Require valid-user
        </Location>

        <Location /api/>
            ProxyPass ${LOCATION_API_URL} timeout=120 retry=0 keepalive=On
            ProxyPassReverse ${LOCATION_API_URL}

            AuthType openid-connect
            Require valid-user
        </Location>
        <Location /app/>
            ProxyPass ${LOCATION_APP_URL}
            ProxyPassReverse ${LOCATION_APP_URL}

            AuthType openid-connect
            Require valid-user
        </Location>
    </VirtualHost>
