#!/bin/bash
AGE_PUBLIC_KEY=age1q5q7lt6twttye7h5dx4zu0eek04pu6szqfx28w00vq3z6nmlc9dq7md4xd
export SOPS_AGE_KEY_FILE=askem.agekey

decrypt() {
    for SECRET_FILE in `ls -1 secrets*.yaml`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/certificates/*.pem`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/realm/*.json`; do
        sops --decrypt --in-place ${SECRET_FILE}
    done
}

encrypt() {
    for SECRET_FILE in `ls -1 secrets*.yaml`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --encrypted-regex '^(data|stringData)$' --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/certificates/*.pem`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --in-place ${SECRET_FILE}
    done
    for SECRET_FILE in `ls -1 gateway/keycloak/realm/*.json`; do
        sops --age=${AGE_PUBLIC_KEY} --encrypt --in-place ${SECRET_FILE}
    done
}

# Displays the status of all services
if [[ ${1} == "status" ]]; then
    ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl get po,svc,configMap -n terarium
    exit 0
fi

if [[ ${1} == "decrypt" ]]; then
    decrypt
    exit 0
fi
if [[ ${1} == "encrypt" ]]; then
    encrypt
    exit 0
fi

# Launches TERArium
if [[ ${1} == "up" ]]; then
    decrypt
    kubectl kustomize . | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl apply --filename -
    exit 0
fi

# Tears down TERArium
if [[ ${1} == "down" ]]; then
    decrypt
    kubectl kustomize . | ssh uncharted-askem-staging-askem-staging-kube-manager-1 sudo kubectl delete --filename -
    exit 0
fi

echo "Usage:"
echo "    ${0} up      Launch TERArium"
echo "    ${0} down    Tear-down TERArium"
echo "    ${0} status  Display status of running TERArium"
echo "    ${0} decrypt Decrypt secret files"
echo "    ${0} encrypt Encrypt secret files"
