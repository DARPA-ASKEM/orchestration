---
# Lint and Format files.
# Linting YAML/YML

name: Lint & Format
on:
  workflow_call:

  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  lintYaml:
    name: Lint YAML Files
    uses: ./.github/workflows/lint_yaml.yml

  lintDocker:
    name: Lint Docker Files
    runs-on: ubuntu-22.04
    env:
      HADOLINT_RECURSIVE: true

    steps:
      # 1 - checkout the request
      - uses: actions/checkout@v3

      # 2 - lint all dockerfiles found
      - name: Lint Dockerfiles
        id: hadolint
        uses: hadolint/hadolint-action@f988afea3da57ee48710a9795b6bb677cc901183
        with:
          dockerfile: Dockerfile
          recursive: true

      # 3 - Add PR comment on failure
      - name: Update Pull Request
        uses: actions/github-script@v6
        if: failure() && github.event_name == 'pull_request'
        with:
          script: |
            const output = `
            #### Docker Lint Errors:
            \`\`\`
            ${{ steps.hadolint.outputs.results }}
            \`\`\`
            `;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

  kubeconform:
    name: Validate K8 Configs
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
    steps:
      # 1 - Checkout the repository
      - name: Checkout the repository
        uses: actions/checkout@v3

      # 2 - Login to GHCR
      - name: Login to registry ${{ env.REGISTRY }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # 3 - Validate Kubernetes Configs
      - name: Validate K8s Config
        uses: docker://ghcr.io/yannh/kubeconform:master
        with:
          entrypoint: '/kubeconform'
          args: '-summary -output json ./kubernetes'
